USE [DWCOOPAC]
GO
-- Declarar la fecha de la tabla FECHAMAESTRA
DECLARE @FECHA DATE;
--SET @FECHA = (SELECT FECHA FROM [DWCOOPAC].dbo.ST_FECHAMAESTRA);
SET @FECHA ='2024-04-01'
--DECLARE @FECHACAMPANA DATE;
--SET @FECHACAMPANA = (
--					SELECT INICIO FROM   [dbo].[ST_CAMPANAS]
--					WHERE INICIO<=CONVERT(DATE,GETDATE()) AND FIN>=CONVERT(DATE,GETDATE()));

DECLARE @TC DECIMAL(15,3) = (select promedio from DW_XTIPOCAMBIO where fecha = (select fecha from st_fechamaestra where estado = 1) and codigoTipoCambio = 3)

---------------------Extraer movimientos del reporte 6------------------------------------------------------------
DROP TABLE IF EXISTS #REPORTE6
SELECT 
	CODIGO,
	MONEDA,
	DINERO_FRESCO,
	FECHAUSUARIO,
	MAX(HORA)HORA,
	STRING_AGG(FORMAPAGO2, ', ') AS FORMAPAGO2,
	NFORMAPAGO=IIF(FORMAPAGO2='Transf. Interna',2,1),
	IMPORTE = SUM(IMPORTE)
	
INTO #REPORTE6
FROM
	WT_REPORTE6
WHERE   FECHAUSUARIO>=@FECHA
---YEAR(FECHAUSUARIO)=YEAR(@FECHA)
	AND TIPOMOVIMIENTO='ENTRADA'
	AND PRODUCTO='AHV'
GROUP BY 	CODIGO,
	NOMBRECOMPLETO,
	MONEDA,
	DINERO_FRESCO,
	FECHAUSUARIO,
	IIF(FORMAPAGO2='Transf. Interna',2,1)




---------------------Extraer movimientos del reporte 9------------------------------------------------------------	

DROP TABLE IF EXISTS #REPORTE9
SELECT *,
SOCIO_UNICO=IIF(ROW_NUMBER() OVER(PARTITION BY CODCIPPERSONA,FECHAAPERTURA,MONEDA
			ORDER BY FECHAAPERTURA,HoraDeposito ASC)>1,0,1)
			                         
INTO #REPORTE9
FROM 
	WT_REPORTE9 
WHERE  FECHAAPERTURA>=@FECHA
--YEAR(FECHAAPERTURA)=YEAR(@FECHA)

AND CONVERT(DATE,ISNULL(F_CANCELALIQUIDA,GETDATE()))>fechaapertura


---------------------Añadir la forma de pago------------------------------------------------------------
DROP TABLE IF EXISTS #TREPORTE9
SELECT R9.* ,R6.FORMAPAGO2
INTO #TREPORTE9
FROM 
	#REPORTE9 R9
LEFT JOIN 
	(SELECT * FROM #REPORTE6 WHERE NFORMAPAGO=1 AND IMPORTE>0)R6
ON R9.codcippersona=R6.CODIGO AND R9.MONEDA=R6.MONEDA  AND  R9.FECHAAPERTURA=R6.FECHAUSUARIO


------------------------------------------------------------------------------------------------------------
--------------------Revisando movimiento con moneda cruzada------------------------------------------------
------------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS #MONEDAREPORTE6
SELECT DISTINCT CODIGO,MONEDA
INTO #MONEDAREPORTE6
FROM #REPORTE6 WHERE CODIGO IN (SELECT  DISTINCT codcippersona FROM #REPORTE9)


DROP TABLE IF EXISTS #FALTAREPORTE6
SELECT  codcippersona,moneda 
INTO #FALTAREPORTE6
FROM #REPORTE9 WHERE CONCAT(codcippersona,moneda) NOT IN (SELECT CONCAT(CODIGO,MONEDA) FROM #MONEDAREPORTE6)


DROP TABLE IF EXISTS #SOBRAREPORTE6
SELECT  A.CODIGO,A.MONEDA ,B.MONEDA [MONEDAAPERTURA],B.fechaapertura,B.HoraDeposito
INTO #SOBRAREPORTE6
FROM #MONEDAREPORTE6 A
LEFT JOIN #REPORTE9 B ON A.CODIGO=B.codcippersona 
WHERE CONCAT(A.CODIGO,A.MONEDA) NOT IN (SELECT CONCAT(codcippersona,moneda ) FROM #REPORTE9)



DROP TABLE IF EXISTS #MONEDACRUZADA
SELECT DISTINCT A.*,
IMPORTE2=IIF(MONEDAAPERTURA='D',IMPORTE/C.PROMEDIO,IMPORTE*C.PROMEDIO),
B.MONEDAAPERTURA,
B.FECHAAPERTURA
INTO #MONEDACRUZADA
FROM #REPORTE6 A 
LEFT JOIN  #SOBRAREPORTE6 B
ON A.CODIGO=B.CODIGO AND A.MONEDA=B.MONEDA AND  CAST(A.FECHAUSUARIO AS DATETIME) + CAST(A.HORA AS DATETIME)  
BETWEEN DATEADD(DAY, -8, CAST(B.FECHAAPERTURA AS DATETIME) + CAST(B.HoraDeposito AS DATETIME)) 
    AND CAST(B.FECHAAPERTURA AS DATETIME) + CAST(B.HoraDeposito AS DATETIME)
LEFT JOIN (SELECT * FROM DW_XTIPOCAMBIO WHERE codigoTipoCambio=3)c
ON B.FECHAAPERTURA=c.fecha

WHERE CONCAT(A.CODIGO,A.MONEDA) IN (SELECT CONCAT(CODIGO,MONEDA) FROM #SOBRAREPORTE6)
AND A.DINERO_FRESCO='SI'





------------------------------------------------------------------------------------
-----Obtener movimientos de cuenta mancomunada---------------------
------------------------------------------------------------------------------------

DROP TABLE IF EXISTS #WT_REPORTE6_DPF
SELECT * 
INTO #WT_REPORTE6_DPF
FROM WT_REPORTE6   WHERE PRODUCTO='CDE' AND TIPOMOVIMIENTO='ENTRADA'
AND FECHAUSUARIO>=@FECHA


DROP TABLE IF EXISTS #NUMEROCUENTA
SELECT CODIGO,NUMEROCUENTA, [dbo].[UFN_NUMEROCUENTA](RIGHT(OBSERVACION,( CHARINDEX(' ', REVERSE(OBSERVACION)))-1))[NUMEROCUENTA2] 
INTO #NUMEROCUENTA
FROM #WT_REPORTE6_DPF



DROP TABLE IF EXISTS #CUENTAMANCOMUNADA
SELECT A.CODIGO[CODIGO_MOV],A.NUMEROCUENTA,A.MONEDA,A.IMPORTE,A.FECHAUSUARIO,A.HORA,B.CODIGO[CODIGO_DPF]
INTO #CUENTAMANCOMUNADA
FROM WT_REPORTE6 A
INNER JOIN #NUMEROCUENTA B
ON A.NUMEROCUENTA=B.NUMEROCUENTA2 AND A.CODIGO<>B.CODIGO AND A.FECHAUSUARIO>=@FECHA
AND DINERO_FRESCO='SI'




-------------------Agregando la columnas adicionales al reporte------------------
-----Identificando horas movimientos vacías---------------------
DROP TABLE IF EXISTS #TEMP_DINEROFRESCO
SELECT R9.*, R6.HORA [HORAMOVIMIENTO]
	INTO #TEMP_DINEROFRESCO
FROM 
	#TREPORTE9 R9 
LEFT JOIN  
	(SELECT * FROM #REPORTE6 WHERE DINERO_FRESCO='SI')R6
ON R9.codcippersona=R6.CODIGO AND R9.MONEDA=R6.MONEDA  AND  R9.FECHAAPERTURA=R6.FECHAUSUARIO AND R9.HoraDeposito>=R6.HORA
LEFT JOIN 
	#CUENTAMANCOMUNADA C
ON R9.codcippersona=C.CODIGO_DPF AND R9.moneda=C.MONEDA AND R9.fechaapertura=C.FECHAUSUARIO AND R9.HoraDeposito>=C.HORA




-----Actualizando socio único a los movimientos que si tienen hora---------------------
;WITH CTE AS (
    SELECT 
        *,
        IIF(ROW_NUMBER() OVER(PARTITION BY CODCIPPERSONA,FECHAAPERTURA,MONEDA
			ORDER BY [HORAMOVIMIENTO]DESC)>1,0,1) AS RowNum
    FROM #TEMP_DINEROFRESCO
)


UPDATE A
SET A.SOCIO_UNICO = RowNum
--SELECT A.*
FROM  CTE A
WHERE codcippersona IN (
	SELECT codcippersona
	FROM #TEMP_DINEROFRESCO WHERE codcippersona IN (
	SELECT codcippersona
	FROM #TEMP_DINEROFRESCO
	WHERE SOCIO_UNICO=1   and [HORAMOVIMIENTO] is null )
	GROUP BY codcippersona
	HAVING COUNT(codcippersona)>1)



-----1.Dinero Fresco---------------------
DROP TABLE IF EXISTS #DINEROFRESCO
SELECT R9.*,
	MONTOAPERTURA = IIF(R9.SOCIO_UNICO=1, SUM(R9.MONTOINICIAL) OVER (PARTITION BY R9.CODCIPPERSONA ,R9.FECHAAPERTURA,R9.MONEDA ),0),
	DF1 =  IIF(R9.SOCIO_UNICO=1,ISNULL(R6.IMPORTE,0),0),
	DFM=   IIF(R9.SOCIO_UNICO=1,ISNULL(C.IMPORTE,0),0)
	INTO #DINEROFRESCO
FROM 
	#TEMP_DINEROFRESCO R9 
LEFT JOIN  
	(SELECT * FROM #REPORTE6 WHERE DINERO_FRESCO='SI')R6
ON R9.codcippersona=R6.CODIGO AND R9.MONEDA=R6.MONEDA  AND  R9.FECHAAPERTURA=R6.FECHAUSUARIO AND R9.HoraDeposito>=R6.HORA
LEFT JOIN 
	#CUENTAMANCOMUNADA C
ON R9.codcippersona=C.CODIGO_DPF AND R9.moneda=C.MONEDA AND R9.fechaapertura=C.FECHAUSUARIO AND R9.HoraDeposito>=C.HORA



---------Actualizar el monto de movimiento de cuentas mancomunadas---------
UPDATE D
SET DF1=C.IMPORTE
--SELECT * 
FROM #DINEROFRESCO D INNER JOIN #CUENTAMANCOMUNADA C 
ON D.codcippersona=C.CODIGO_DPF AND D.moneda=C.MONEDA AND D.fechaapertura=C.FECHAUSUARIO AND D.HoraDeposito>=C.HORA




-----2.No Dinero Fresco Transferencia interna---------------------
DROP TABLE IF EXISTS #TEMPDINEROFRESCO2
SELECT D.*,
	TRANSFERENCIA_INTERNA =  IIF(D.SOCIO_UNICO=1,ISNULL(R6.IMPORTE,0),0)
INTO #TEMPDINEROFRESCO2
FROM 
	#DINEROFRESCO D
LEFT JOIN  
	(SELECT * FROM #REPORTE6 WHERE DINERO_FRESCO='NO')R6
ON D.codcippersona=R6.CODIGO AND D.MONEDA=R6.MONEDA  AND  D.FECHAAPERTURA=R6.FECHAUSUARIO



-----3.Obtener registros sin dinero fresco y que sus movimientos del día sean menor al monto de apertura---------------------
DROP TABLE IF EXISTS #SIN_DINERO_FRESCO
SELECT * 
INTO #SIN_DINERO_FRESCO
FROM 
	#TEMPDINEROFRESCO2
WHERE
	DF1< MONTOAPERTURA AND  TRANSFERENCIA_INTERNA<MONTOAPERTURA 




-----Eliminar movmientos de dinero fresco que no se debe considerar	
DELETE FROM #MONEDACRUZADA WHERE IMPORTE2 IS NOT NULL AND FECHAUSUARIO<>fechaapertura AND CONCAT(CODIGO,fechaapertura) NOT IN (SELECT CONCAT(codcippersona,fechaapertura) FROM #SIN_DINERO_FRESCO)


-----Agregar columnas de moneda cruzada---------------------------------------
DROP TABLE IF EXISTS #DINEROFRESCO2
SELECT DF.*,
	MC=   IIF(df.SOCIO_UNICO=1,ISNULL(MC.IMPORTE,0),0),-----------Moneda Cruzada -----Monto en moneda original del movimiento
	MCfinal=   IIF(df.SOCIO_UNICO=1,ISNULL(MC.IMPORTE2,0),0)-----------Moneda Cruzada -----Monto en moneda original de la apertura
	INTO #DINEROFRESCO2
FROM #TEMPDINEROFRESCO2 df
LEFT JOIN 
	(SELECT * FROM #MONEDACRUZADA WHERE IMPORTE2 IS NOT NULL)MC
ON df.codcippersona=MC.CODIGO AND df.moneda=MC.MONEDAAPERTURA AND df.fechaapertura=MC.fechaapertura


	

-----4. Buscar movimientos 7 días atrás---------------------
DROP TABLE IF EXISTS #TEMP_DINEROFRESCO_7DIAS;
SELECT 
    B.CODIGO,
    A.MONTOAPERTURA,
    A.fechaapertura,
    A.moneda,
    B.FECHAUSUARIO,
    ROW_NUMBER() OVER (PARTITION BY B.CODIGO, B.FECHAUSUARIO, A.MONEDA ORDER BY FECHAUSUARIO ASC) AS N,
	ROW_NUMBER() OVER (PARTITION BY B.CODIGO, A.FECHAAPERTURA, A.MONEDA ORDER BY FECHAUSUARIO ASC) AS N2,
    SUM(B.IMPORTE) AS IMPORTE
INTO #TEMP_DINEROFRESCO_7DIAS
FROM 
    #SIN_DINERO_FRESCO A
INNER JOIN 
    #REPORTE6 B ON A.codcippersona = B.codigo AND A.moneda = B.MONEDA
WHERE 
    CAST(B.FECHAUSUARIO AS DATETIME) + CAST(B.HORA AS DATETIME)  BETWEEN DATEADD(DAY, -8, CAST(A.FECHAAPERTURA AS DATETIME) + CAST(A.HoraDeposito AS DATETIME)) 
    AND CAST(A.FECHAAPERTURA AS DATETIME) + CAST(A.HoraDeposito AS DATETIME)
    AND B.DINERO_FRESCO = 'SI'
GROUP BY 
    B.CODIGO, A.MONTOAPERTURA, A.fechaapertura, A.moneda, B.FECHAUSUARIO
ORDER BY 
    A.fechaapertura;


	-----4.1 Buscar movimientos 7 días atrás usado---------------------
	DROP TABLE IF EXISTS #TEMP_DINEROFRESCO_7DIAS_USADO;
	SELECT 
		B.CODIGO,
		A.MONTOAPERTURA,
		A.fechaapertura,
		A.moneda,
		B.FECHAUSUARIO,
		ROW_NUMBER() OVER (PARTITION BY B.CODIGO, B.FECHAUSUARIO, A.MONEDA ORDER BY FECHAUSUARIO ASC) AS N,
		ROW_NUMBER() OVER (PARTITION BY B.CODIGO, A.FECHAAPERTURA, A.MONEDA ORDER BY FECHAUSUARIO ASC) AS N2,
		SUM(B.IMPORTE) AS IMPORTE
	INTO #TEMP_DINEROFRESCO_7DIAS_USADO
	FROM 
		(SELECT * FROM #DINEROFRESCO WHERE DF1> 0) A
	INNER JOIN 
		#REPORTE6 B ON A.codcippersona = B.codigo AND A.moneda = B.MONEDA
	WHERE 
		CAST(B.FECHAUSUARIO AS DATETIME) + CAST(B.HORA AS DATETIME) BETWEEN DATEADD(DAY, -8, CAST(A.FECHAAPERTURA AS DATETIME) + CAST(A.HoraDeposito AS DATETIME)) 
		AND CAST(A.FECHAAPERTURA AS DATETIME) + CAST(A.HoraDeposito AS DATETIME)
		AND B.DINERO_FRESCO = 'SI'   
	GROUP BY 
		B.CODIGO, A.MONTOAPERTURA, A.fechaapertura, A.moneda, B.FECHAUSUARIO
	ORDER BY 
		A.fechaapertura;



	-----4.2 Calcular el saldo usado en primera apertura del rango de 7 días---------------------
	DROP TABLE IF EXISTS #SALDO_USADO
	SELECT A.CODIGO,A.FECHAAPERTURA,A.MONEDA,A.FECHAUSUARIO,B.FECHAAPERTURA[1APERTURA],B.MONTOAPERTURA[APERTURA_USADA],B.IMPORTE,SALDO=B.IMPORTE-B.MONTOAPERTURA
	INTO #SALDO_USADO
	FROM #TEMP_DINEROFRESCO_7DIAS A
	INNER JOIN #TEMP_DINEROFRESCO_7DIAS_USADO B 
	ON A.CODIGO=B.CODIGO AND A.FECHAUSUARIO=B.FECHAUSUARIO AND A.MONEDA=B.MONEDA




	UPDATE A
	SET IMPORTE=B.SALDO
	FROM 
		#TEMP_DINEROFRESCO_7DIAS A
	INNER JOIN  
		#SALDO_USADO B 
		ON A.CODIGO=B.CODIGO AND A.FECHAAPERTURA=B.FECHAAPERTURA AND A.MONEDA=B.MONEDA AND A.FECHAUSUARIO=B.FECHAUSUARIO
	WHERE B.SALDO>0



	-----4.2 Eliminar los registros duplicados , cuando hay más de una apertura en el rango de 7 días---------------------
	DROP TABLE IF EXISTS #ELIMINAR
	SELECT * 
	INTO #ELIMINAR
	FROM #TEMP_DINEROFRESCO_7DIAS WHERE  N=2
	UNION 
	SELECT * FROM #TEMP_DINEROFRESCO_7DIAS 
	WHERE CONCAT(CODIGO,FECHAUSUARIO,IMPORTE) IN (SELECT CONCAT(CODIGO,FECHAUSUARIO,IMPORTE)  FROM #TEMP_DINEROFRESCO_7DIAS WHERE  N=2 ) AND N2=2



	-----4.3 Calcular el saldo restante del dinero fresco de la primera apertura del rango de 7 días ---------------------
	DROP TABLE IF EXISTS #SALDO
	SELECT * ,SALDO=IMPORTE-MONTOAPERTURA
	INTO #SALDO
	FROM #TEMP_DINEROFRESCO_7DIAS 
	WHERE CONCAT(CODIGO,FECHAUSUARIO,IMPORTE) IN (SELECT CONCAT(CODIGO,FECHAUSUARIO,IMPORTE)  FROM #TEMP_DINEROFRESCO_7DIAS WHERE  N=2 ) AND N=1 and n2=1


	

DROP TABLE IF EXISTS #TEMP_DINEROFRESCO_7DIAS_2 
SELECT CODIGO,MONTOAPERTURA,fechaapertura,moneda,MAX(FECHAUSUARIO)FECHAUSUARIO,SUM(IMPORTE)IMPORTE 
INTO #TEMP_DINEROFRESCO_7DIAS_2 
FROM #TEMP_DINEROFRESCO_7DIAS 
WHERE CONCAT(CODIGO,MONTOAPERTURA,fechaapertura,moneda,FECHAUSUARIO,IMPORTE) 
NOT IN (SELECT CONCAT(CODIGO,MONTOAPERTURA,fechaapertura,moneda,FECHAUSUARIO,IMPORTE)  FROM #ELIMINAR)
GROUP BY CODIGO,MONTOAPERTURA,fechaapertura,moneda


-----5. Buscar movimientos 1 día atrás---------------------
DROP TABLE IF EXISTS #TEMP_DINEROFRESCO_1DIA;
SELECT 
    B.CODIGO,
    A.MONTOAPERTURA,
    A.fechaapertura,
    A.moneda,
    B.IMPORTE,
    B.FECHAUSUARIO
INTO #TEMP_DINEROFRESCO_1DIA
FROM 
    #SIN_DINERO_FRESCO A
INNER JOIN 
    #REPORTE6 B ON A.codcippersona = B.codigo AND A.moneda = B.MONEDA
WHERE 
    B.FECHAUSUARIO = DATEADD(DAY, -1, A.FECHAAPERTURA) 
    AND A.HoraDeposito >= B.HORA
    AND B.DINERO_FRESCO = 'SI'


	----5.1 Cruzar con los duplicados encontrados líneas atrás---------------------
	DROP TABLE IF EXISTS #DINEROFRESCO_1DIA;
	SELECT 
		DISTINCT A.* 
	INTO 
		#DINEROFRESCO_1DIA
	FROM 
		#TEMP_DINEROFRESCO_1DIA A 
	INNER JOIN
		(SELECT * FROM #TEMP_DINEROFRESCO_7DIAS WHERE N=2) B ON A.CODIGO=B.CODIGO AND A.fechaapertura=B.fechaapertura AND A.FECHAUSUARIO=B.FECHAUSUARIO


	----5.1 Actualizar importe con el saldo restando de la primera apertura---------------------
	UPDATE A
	SET IMPORTE=A.IMPORTE+B.SALDO
	FROM 
		#DINEROFRESCO_1DIA A
	INNER JOIN  
		#SALDO B 
		ON A.CODIGO=B.CODIGO AND DATEADD(DAY, -1, A.FECHAAPERTURA) =B.FECHAAPERTURA




-----6. Buscar movimientos 2 días atrás---------------------
DROP TABLE IF EXISTS #TEMP_DINEROFRESCO_2DIAS;
SELECT 
    B.CODIGO,
    A.MONTOAPERTURA,
    A.fechaapertura,
    A.moneda,
    B.IMPORTE,
    B.FECHAUSUARIO
INTO #TEMP_DINEROFRESCO_2DIAS
FROM 
    #SIN_DINERO_FRESCO A
INNER JOIN 
    #REPORTE6 B ON A.codcippersona = B.codigo AND A.moneda = B.MONEDA
WHERE 
    B.FECHAUSUARIO <= DATEADD(DAY, -2, A.FECHAAPERTURA) 
    AND A.HoraDeposito >= B.HORA
    AND B.DINERO_FRESCO = 'SI'


	----6.1 Cruzar con los duplicados encontrados líneas atrás---------------------
	DROP TABLE IF EXISTS #DINEROFRESCO_2DIAS;
	SELECT 
		DISTINCT A.* 
	INTO 
		#DINEROFRESCO_2DIAS
	FROM 
		#TEMP_DINEROFRESCO_2DIAS A 
	INNER JOIN
		(SELECT * FROM #TEMP_DINEROFRESCO_7DIAS WHERE N=2) B ON A.CODIGO=B.CODIGO AND A.fechaapertura=B.fechaapertura AND A.FECHAUSUARIO=B.FECHAUSUARIO


	----6.1 Actualizar importe con el saldo restando de la primera apertura---------------------
	UPDATE A
	SET IMPORTE=A.IMPORTE+B.SALDO
	FROM 
		#DINEROFRESCO_2DIAS A
	INNER JOIN  
		#SALDO B 
		ON A.CODIGO=B.CODIGO AND DATEADD(DAY, -2, A.FECHAAPERTURA) =B.FECHAAPERTURA



-----7. Buscar movimientos 3 días atrás---------------------
DROP TABLE IF EXISTS #TEMP_DINEROFRESCO_3DIAS;
SELECT 
    B.CODIGO,
    A.MONTOAPERTURA,
    A.fechaapertura,
    A.moneda,
    B.IMPORTE,
    B.FECHAUSUARIO
INTO #TEMP_DINEROFRESCO_3DIAS
FROM 
    #SIN_DINERO_FRESCO A
INNER JOIN 
    #REPORTE6 B ON A.codcippersona = B.codigo AND A.moneda = B.MONEDA
WHERE 
    B.FECHAUSUARIO <= DATEADD(DAY, -3, A.FECHAAPERTURA) 
    AND A.HoraDeposito >= B.HORA
    AND B.DINERO_FRESCO = 'SI'


	----6.1 Cruzar con los duplicados encontrados líneas atrás---------------------
	DROP TABLE IF EXISTS #DINEROFRESCO_3DIAS;
	SELECT 
		DISTINCT A.* 
	INTO 
		#DINEROFRESCO_3DIAS
	FROM 
		#TEMP_DINEROFRESCO_3DIAS A 
	INNER JOIN
		(SELECT * FROM #TEMP_DINEROFRESCO_7DIAS WHERE N=2) B ON A.CODIGO=B.CODIGO AND A.fechaapertura=B.fechaapertura AND A.FECHAUSUARIO=B.FECHAUSUARIO


	----6.1 Actualizar importe con el saldo restando de la primera apertura---------------------
	UPDATE A
	SET IMPORTE=A.IMPORTE+B.SALDO
	FROM 
		#DINEROFRESCO_3DIAS A
	INNER JOIN  
		#SALDO B 
		ON A.CODIGO=B.CODIGO AND DATEADD(DAY, -3, A.FECHAAPERTURA) =B.FECHAAPERTURA



-----8. Buscar movimientos 4 días atrás---------------------
DROP TABLE IF EXISTS #TEMP_DINEROFRESCO_4DIAS;
SELECT 
    B.CODIGO,
    A.MONTOAPERTURA,
    A.fechaapertura,
    A.moneda,
    B.IMPORTE,
    B.FECHAUSUARIO
INTO #TEMP_DINEROFRESCO_4DIAS
FROM 
    #SIN_DINERO_FRESCO A
INNER JOIN 
    #REPORTE6 B ON A.codcippersona = B.codigo AND A.moneda = B.MONEDA
WHERE 
    B.FECHAUSUARIO <= DATEADD(DAY, -4, A.FECHAAPERTURA) 
    AND A.HoraDeposito >= B.HORA
    AND B.DINERO_FRESCO = 'SI'


	----6.1 Cruzar con los duplicados encontrados líneas atrás---------------------
	DROP TABLE IF EXISTS #DINEROFRESCO_4DIAS;
	SELECT 
		DISTINCT A.* 
	INTO 
		#DINEROFRESCO_4DIAS
	FROM 
		#TEMP_DINEROFRESCO_4DIAS A 
	INNER JOIN
		(SELECT * FROM #TEMP_DINEROFRESCO_7DIAS WHERE N=2) B ON A.CODIGO=B.CODIGO AND A.fechaapertura=B.fechaapertura AND A.FECHAUSUARIO=B.FECHAUSUARIO


	----6.1 Actualizar importe con el saldo restando de la primera apertura---------------------
	UPDATE A
	SET IMPORTE=A.IMPORTE+B.SALDO
	FROM 
		#DINEROFRESCO_4DIAS A
	INNER JOIN  
		#SALDO B 
		ON A.CODIGO=B.CODIGO AND DATEADD(DAY, -4, A.FECHAAPERTURA) =B.FECHAAPERTURA



-----9. Buscar movimientos 5 días atrás---------------------
DROP TABLE IF EXISTS #TEMP_DINEROFRESCO_5DIAS;
SELECT 
    B.CODIGO,
    A.MONTOAPERTURA,
    A.fechaapertura,
    A.moneda,
    B.IMPORTE,
    B.FECHAUSUARIO
INTO #TEMP_DINEROFRESCO_5DIAS
FROM 
    #SIN_DINERO_FRESCO A
INNER JOIN 
    #REPORTE6 B ON A.codcippersona = B.codigo AND A.moneda = B.MONEDA
WHERE 
    B.FECHAUSUARIO <= DATEADD(DAY, -5, A.FECHAAPERTURA) 
    AND A.HoraDeposito >= B.HORA
    AND B.DINERO_FRESCO = 'SI'


	----6.1 Cruzar con los duplicados encontrados líneas atrás---------------------
	DROP TABLE IF EXISTS #DINEROFRESCO_5DIAS;
	SELECT 
		DISTINCT A.* 
	INTO 
		#DINEROFRESCO_5DIAS
	FROM 
		#TEMP_DINEROFRESCO_5DIAS A 
	INNER JOIN
		(SELECT * FROM #TEMP_DINEROFRESCO_7DIAS WHERE N=2) B ON A.CODIGO=B.CODIGO AND A.fechaapertura=B.fechaapertura AND A.FECHAUSUARIO=B.FECHAUSUARIO


	----6.1 Actualizar importe con el saldo restando de la primera apertura---------------------
	UPDATE A
	SET IMPORTE=A.IMPORTE+B.SALDO
	FROM 
		#DINEROFRESCO_5DIAS A
	INNER JOIN  
		#SALDO B 
		ON A.CODIGO=B.CODIGO AND DATEADD(DAY, -5, A.FECHAAPERTURA) =B.FECHAAPERTURA


-----9. Buscar movimientos 6 días atrás---------------------
DROP TABLE IF EXISTS #TEMP_DINEROFRESCO_6DIAS;
SELECT 
    B.CODIGO,
    A.MONTOAPERTURA,
    A.fechaapertura,
    A.moneda,
    B.IMPORTE,
    B.FECHAUSUARIO
INTO #TEMP_DINEROFRESCO_6DIAS
FROM 
    #SIN_DINERO_FRESCO A
INNER JOIN 
    #REPORTE6 B ON A.codcippersona = B.codigo AND A.moneda = B.MONEDA
WHERE 
    B.FECHAUSUARIO <= DATEADD(DAY, -6, A.FECHAAPERTURA) 
    AND A.HoraDeposito >= B.HORA
    AND B.DINERO_FRESCO = 'SI'


	----6.1 Cruzar con los duplicados encontrados líneas atrás---------------------
	DROP TABLE IF EXISTS #DINEROFRESCO_6DIAS;
	SELECT 
		DISTINCT A.* 
	INTO 
		#DINEROFRESCO_6DIAS
	FROM 
		#TEMP_DINEROFRESCO_6DIAS A 
	INNER JOIN
		(SELECT * FROM #TEMP_DINEROFRESCO_7DIAS WHERE N=2) B ON A.CODIGO=B.CODIGO AND A.fechaapertura=B.fechaapertura AND A.FECHAUSUARIO=B.FECHAUSUARIO


	----6.1 Actualizar importe con el saldo restando de la primera apertura---------------------
	UPDATE A
	SET IMPORTE=A.IMPORTE+B.SALDO
	FROM 
		#DINEROFRESCO_6DIAS A
	INNER JOIN  
		#SALDO B 
		ON A.CODIGO=B.CODIGO AND DATEADD(DAY, -6, A.FECHAAPERTURA) =B.FECHAAPERTURA


-----10.Consolidar dinero fresco---------------------
DROP TABLE IF EXISTS #DINEROFRESCO_7DIAS
SELECT CODIGO, MONTOAPERTURA,FECHAAPERTURA,MONEDA,IMPORTE,FECHAUSUARIO
INTO #DINEROFRESCO_7DIAS
FROM #TEMP_DINEROFRESCO_7DIAS_2
UNION

SELECT  * FROM #DINEROFRESCO_1DIA
UNION

SELECT * FROM #DINEROFRESCO_2DIAS
UNION

SELECT * FROM #DINEROFRESCO_3DIAS
UNION

SELECT * FROM #DINEROFRESCO_4DIAS
UNION

SELECT * FROM #DINEROFRESCO_5DIAS
UNION

SELECT * FROM #DINEROFRESCO_6DIAS



-----6.Armando reporte pre final de dinero fresco---------------------
DROP TABLE IF EXISTS #WT_DINERO_FRESCO_DPF_1
SELECT D.*,
	DF =  IIF(D.SOCIO_UNICO=1,
			CASE WHEN ISNULL(D7.IMPORTE+D.MCfinal,D.DF1+D.MCfinal) >= D.MONTOAPERTURA THEN D.MONTOAPERTURA
				 WHEN D.MONTOAPERTURA >ISNULL(D7.IMPORTE+D.MCfinal,D.DF1+D.MCfinal) THEN ISNULL(D7.IMPORTE+D.MCfinal,D.DF1+D.MCfinal) ELSE 0 END,0),
	DNF = IIF(D.SOCIO_UNICO=1, 
			CASE WHEN ISNULL(D7.IMPORTE+D.MCfinal,D.DF1+D.MCfinal) >= D.MONTOAPERTURA THEN 0
				 WHEN D.MONTOAPERTURA >ISNULL(D7.IMPORTE+D.MCfinal,D.DF1+D.MCfinal) THEN  D.MONTOAPERTURA - ISNULL(D7.IMPORTE+D.MCfinal,D.DF1+D.MCfinal) ELSE 0 END,0)
INTO #WT_DINERO_FRESCO_DPF_1
FROM #DINEROFRESCO2  D
LEFT JOIN #DINEROFRESCO_7DIAS D7 ON D.codcippersona=D7.CODIGO AND D.fechaapertura=D7.fechaapertura AND D.moneda=D7.moneda
ORDER BY D.fechaapertura ASC





-----7.Dinero Fresco consolidado en soles---------------------
DROP TABLE IF EXISTS #DINEROFRESCOSOLES
SELECT A.*,
	 DF_CONS= IIF(MONEDA='S',DF,DF*B.PROMEDIO),
	 DNF_CONS= IIF(MONEDA='S',DNF,DNF*B.PROMEDIO)
INTO #DINEROFRESCOSOLES
FROM 
	#WT_DINERO_FRESCO_DPF_1 A
LEFT JOIN DW_XTIPOCAMBIO B
ON A.fechaapertura=B.fecha
WHERE codigoTipoCambio = 3




-----8.Armando reporte final de dinero fresco---------------------
DROP TABLE IF EXISTS WT_DINERO_FRESCO_DPF
SELECT D.*,
	TICKET_PROM = IIF(D.DF_CONS>0,'SI','NO'),
	FILTRO_PLAZO = IIF(D.NUMERODIAS IN(360,720,1080),'SI','NO' ),
	--CAMPAÑA = IIF( FECHAAPERTURA>=@FECHACAMPANA  AND NUMERODIAS IN(360,720,1080),'Campaña Actual','No'),
	 CAMPAÑA = CASE WHEN TPERSON IN (
                                SELECT DISTINCT VARIABLE
                                FROM [dbo].[ST_CAMPANAS_DPF_DETALLE]
                                WHERE CAMPANA = C.CAMPANA AND CARACTERISTICA = 'TPERSON') AND
							SUBPRODUCTO IN (
                                SELECT DISTINCT VARIABLE
                                FROM [dbo].[ST_CAMPANAS_DPF_DETALLE]
                                WHERE CAMPANA = C.CAMPANA AND CARACTERISTICA = 'SUBPRODUCTO' AND D.MONTOINICIAL >= VALOR1 AND D.MONTOINICIAL<=VALOR2)
					  THEN  C.CAMPANA ELSE NULL END ,
	AÑO = YEAR(D.FECHAAPERTURA), 
	MES = MONTH(D.FECHAAPERTURA),
	PROD_SOLES = IIF(D.SUBPRODUCTO IN (SELECT DISTINCT VARIABLE
										FROM [dbo].[ST_CAMPANAS_DPF_DETALLE]
										WHERE CAMPANA = C.CAMPANA AND CARACTERISTICA = 'SUBPRODUCTO' AND VARIABLE LIKE '%SOLES%'),'SI','NO'),
	PROD_DOLARES = IIF(D.SUBPRODUCTO IN (SELECT DISTINCT VARIABLE
										FROM [dbo].[ST_CAMPANAS_DPF_DETALLE]
										WHERE CAMPANA = C.CAMPANA AND CARACTERISTICA = 'SUBPRODUCTO' AND VARIABLE LIKE '%DOLARES%'),'SI','NO'),
	FILTRO_FRS_RNV = IIF(D.DF>0,'DINERO FRESCO','RENOV.'),
	FILTRO_CANAL = IIF(D.AGENCIA_APERT = 'PACINET','DIGITAL','PRESENCIAL'),
	INICIO_CAMAPAÑA= CASE WHEN TPERSON IN (
                                SELECT DISTINCT VARIABLE
                                FROM [dbo].[ST_CAMPANAS_DPF_DETALLE]
                                WHERE CAMPANA = C.CAMPANA AND CARACTERISTICA = 'TPERSON') AND
							SUBPRODUCTO IN (
                                SELECT DISTINCT VARIABLE
                                FROM [dbo].[ST_CAMPANAS_DPF_DETALLE]
                                WHERE CAMPANA = C.CAMPANA AND CARACTERISTICA = 'SUBPRODUCTO' AND D.MONTOINICIAL >= VALOR1 AND D.MONTOINICIAL<=VALOR2)
					  THEN  C.INICIO ELSE NULL END ,
	FECHA_PROCESO= GETDATE(),
	TIPOCAMBIO= B.promedio
INTO WT_DINERO_FRESCO_DPF
FROM #DINEROFRESCOSOLES  D
LEFT JOIN  [dbo].[ST_CAMPANAS_DPF] C ON D.fechaapertura BETWEEN C.INICIO AND C.FIN
LEFT JOIN DW_XTIPOCAMBIO B
ON D.fechaapertura=B.fecha
WHERE codigoTipoCambio = 3
ORDER BY D.fechaapertura ASC



